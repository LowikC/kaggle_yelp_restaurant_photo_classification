name: "YelpNet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  #top: "ignored_label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "image_mean.binaryproto"
  }
  data_param {
    source: "train_image_lmdb"
    batch_size: 256
    backend: LMDB
  }
}
layer {
  name: "labels"
  type: "Data"
  top: "labels"
  include {
    phase: TRAIN
  }
  data_param {
    source: "train_labels_lmdb"
    batch_size: 256
    backend: LMDB
  }
}

layer {
  name: "data"
  type: "Data"
  top: "data"
  #top: "ignored_label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "image_mean.binaryproto"
  }
  data_param {
    source: "val_image_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "labels"
  type: "Data"
  top: "labels"
  include {
    phase: TEST
  }
  data_param {
    source: "val_labels_lmdb"
    batch_size: 64
    backend: LMDB
  }
}

# Slice the 9x1x1 labels into 9 parts.
layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "labels"
  top: "attribute0"
  top: "attribute1"
  top: "attribute2"
  top: "attribute3"
  top: "attribute4"
  top: "attribute5"
  top: "attribute6"
  top: "attribute7"
  top: "attribute8"
  slice_param {
    axis: 1
    slice_point: 1
    slice_point: 2
    slice_point: 3
    slice_point: 4
    slice_point: 5
    slice_point: 6
    slice_point: 7
    slice_point: 8
  }
}


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# One FC8 layer per attribute

# Attribute 0
layer {
  name: "fc8/yelp/attribute0"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8/yelp/attribute0"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy/yelp/attribute0"
  type: "Accuracy"
  bottom: "fc8/yelp/attribute0"
  bottom: "attribute0"
  top: "accuracy/yelp/attribute0"
  include {
    phase: TEST
  }
}
layer {
  name: "loss/yelp/attribute0"
  type: "SoftmaxWithLoss"
  bottom: "fc8/yelp/attribute0"
  bottom: "attribute0"
  top: "loss/yelp/attribute0"
  loss_weight: 0.11111
}


# Attribute 1
layer {
  name: "fc8/yelp/attribute1"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8/yelp/attribute1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy/yelp/attribute1"
  type: "Accuracy"
  bottom: "fc8/yelp/attribute1"
  bottom: "attribute1"
  top: "accuracy/yelp/attribute1"
  include {
    phase: TEST
  }
}
layer {
  name: "loss/yelp/attribute1"
  type: "SoftmaxWithLoss"
  bottom: "fc8/yelp/attribute1"
  bottom: "attribute1"
  top: "loss/yelp/attribute1"
  loss_weight: 0.11111
}


# Attribute 2
layer {
  name: "fc8/yelp/attribute2"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8/yelp/attribute2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy/yelp/attribute2"
  type: "Accuracy"
  bottom: "fc8/yelp/attribute2"
  bottom: "attribute2"
  top: "accuracy/yelp/attribute2"
  include {
    phase: TEST
  }
}
layer {
  name: "loss/yelp/attribute2"
  type: "SoftmaxWithLoss"
  bottom: "fc8/yelp/attribute2"
  bottom: "attribute2"
  top: "loss/yelp/attribute2"
  loss_weight: 0.11111
}


# Attribute 3
layer {
  name: "fc8/yelp/attribute3"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8/yelp/attribute3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy/yelp/attribute3"
  type: "Accuracy"
  bottom: "fc8/yelp/attribute3"
  bottom: "attribute3"
  top: "accuracy/yelp/attribute3"
  include {
    phase: TEST
  }
}
layer {
  name: "loss/yelp/attribute3"
  type: "SoftmaxWithLoss"
  bottom: "fc8/yelp/attribute3"
  bottom: "attribute3"
  top: "loss/yelp/attribute3"
  loss_weight: 0.11111
}


# Attribute 4
layer {
  name: "fc8/yelp/attribute4"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8/yelp/attribute4"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy/yelp/attribute4"
  type: "Accuracy"
  bottom: "fc8/yelp/attribute4"
  bottom: "attribute4"
  top: "accuracy/yelp/attribute4"
  include {
    phase: TEST
  }
}
layer {
  name: "loss/yelp/attribute4"
  type: "SoftmaxWithLoss"
  bottom: "fc8/yelp/attribute4"
  bottom: "attribute4"
  top: "loss/yelp/attribute4"
  loss_weight: 0.11111
}


# Attribute 5
layer {
  name: "fc8/yelp/attribute5"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8/yelp/attribute5"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy/yelp/attribute5"
  type: "Accuracy"
  bottom: "fc8/yelp/attribute5"
  bottom: "attribute5"
  top: "accuracy/yelp/attribute5"
  include {
    phase: TEST
  }
}
layer {
  name: "loss/yelp/attribute5"
  type: "SoftmaxWithLoss"
  bottom: "fc8/yelp/attribute5"
  bottom: "attribute5"
  top: "loss/yelp/attribute5"
  loss_weight: 0.11111
}


# Attribute 6
layer {
  name: "fc8/yelp/attribute6"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8/yelp/attribute6"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy/yelp/attribute6"
  type: "Accuracy"
  bottom: "fc8/yelp/attribute6"
  bottom: "attribute6"
  top: "accuracy/yelp/attribute6"
  include {
    phase: TEST
  }
}
layer {
  name: "loss/yelp/attribute6"
  type: "SoftmaxWithLoss"
  bottom: "fc8/yelp/attribute6"
  bottom: "attribute6"
  top: "loss/yelp/attribute6"
  loss_weight: 0.11111
}


# Attribute 7
layer {
  name: "fc8/yelp/attribute7"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8/yelp/attribute7"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy/yelp/attribute7"
  type: "Accuracy"
  bottom: "fc8/yelp/attribute7"
  bottom: "attribute7"
  top: "accuracy/yelp/attribute7"
  include {
    phase: TEST
  }
}
layer {
  name: "loss/yelp/attribute7"
  type: "SoftmaxWithLoss"
  bottom: "fc8/yelp/attribute7"
  bottom: "attribute7"
  top: "loss/yelp/attribute7"
  loss_weight: 0.11111
}
